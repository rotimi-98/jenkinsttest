pipeline {

    agent none

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:2.7.16-slim'
                    args '--user root'
                }
            }
            when {
              allOf {
                changeset '**/vote/**'
                }
            }
            steps {
                echo 'Compiling worker application...'
                dir('vote') {
                  sh 'pip install -r requirements.txt'
                }
            }
        }
        stage('Test') {
            agent {
                docker {
                    image 'python:2.7.16-slim'
                    args '--user root'
                }
            }
            when {
              allOf {
                changeset '**/vote/**'
                }
            }
            steps {
                echo 'Running unit test for worker application..'
                dir('vote') {
                  sh 'pip install -r requirements.txt'
                  sh 'nosetests -v'
                }
            }
        }
        stage('Docker-package') {
            agent any
            when {
              allOf {
                branch 'master'
                changeset '**/vote/**'
                }
            }
            steps {
                echo 'Running unit test for worker application..'
                script {
                  docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                     def voteImage = docker.build("rotimi98/vote:v${env.BUILD_ID}", "./vote")
                     voteImage.push()
                     voteImage.push("${env.BRANCH_NAME}")
                  }
                }
            }
        }
    }
    post {
     always {
       echo "Pipeline for vote is completed and packaging archive file..."
      }
     failure {
       slackSend (channel: "#vote", message: "Build failed ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
     }
     success {
       slackSend (channel: "#vote", message: "Build succeeded ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
     }

    }

}
